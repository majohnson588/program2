program2:
c语言实现扫雷游戏
#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <time.h>
#define ROW 9
#define COL 9
#define EASY_COUNT 10
#define ROWS ROW+2
#define COLS COL+2
//'1' - '0' = 1
//'3' - '0' = 3
static int get_mine_count(char mine[ROWS][COLS],int x, int y)
{
    return
     mine[x-1][y] +
     mine[x-1][y-1] +
     mine[x][y-1] +
     mine[x+1][y-1] +
     mine[x+1][y] +
     mine[x+1][y+1] +
     mine[x][y+1] +
     mine[x-1][y+1] - 8*'0';
} 
void FindMine(char mine[ROWS][COLS], char show[ROWS][COLS], int row, int col)
{
    int x = 0;
    int y = 0;
    int win = 0;
    while(win<row*col - EASY_COUNT)
    {
    printf("请输入:>");
    scanf("%d%d", &x, &y);
    if(x>=1 && x<=row && y>=1 && y<=col)
    {
        //踩雷
        //1.继续
        //2,赢
        if(mine[x][y] == '1')
        {
            printf("很遗憾,你踩雷了\n");
            DisplayBoard(mine, row, col);
            break;
        }
        else
        {
             //游戏继续
             int count = get_mine_count(mine, x, y);
             show[x][y] = count + '0';
             DisplayBoard(show, row, col);
             win++;
        }
    }
    else
    {
        printf("超出范围，请重新输入");
    }
    }
    if(win == col*row - EASY_COUNT)
    {
    printf("扫雷胜利!\n");
    DisplayBoard(mine, row, col);
    }
}
void SetMine(char mine[ROWS][COLS],int row,int col)
{
      int count = EASY_COUNT;
      while(count)
    {
      int x = rand() % row+1;//1-9
      int y = rand() % col+1;//1-9
        if(mine[x][y] == '0')
        {
            mine[x][y] = '1';
            count--;
        }
    }
}
void DisplayBoard(char board[ROWS][COLS],int row, int col)
{
     int i = 0;
     int j = 0;
     //打印雷盘
     for(i=0;i<=col;i++)
     {
        printf("%d ",i);
     }
     printf("\n");
     for(i=1;i<=row;i++)
     {
        printf("%d ",i);
        for(j=1;j<=col;j++)
        {
            printf("%c ",board[i][j]);
        }
    printf("\n");
     }
}
void InitBoard(char board[ROWS][COLS], int rows,int cols,char set)
{
    int i = 0;
    int j = 0;
    for(i=0;i<rows;i++)
    {
        for(j=0;j<cols;j++)
        {
            board[i][j]=set;
        }
    }
}
void menu()
{
    printf("***********************************\n");
    printf("********      1.play       ********\n");
    printf("********      0.exit       ********\n");
    printf("***********************************\n");
}
void game()
{
    //雷的信息存储
    //1.布置好雷的信息 
    char mine[ROWS][COLS] = {0};//11*11
    //2.排查出雷的信息
    char show[ROWS][COLS] = {0};
    //初始化
    InitBoard(mine, ROWS, COLS, '0');
    InitBoard(show, ROWS, COLS, '*');
    //打印雷盘
    DisplayBoard(mine, ROW, COL);
    DisplayBoard(show, ROW, COL);
    //布置雷
    SetMine(mine, ROW, COL);
    DisplayBoard(mine, ROW, COL);
    //扫雷
    FindMine(mine, show, ROW, COL);
}
void test()
{
    int input = 0;
    srand((unsigned int) time (NULL));
    do
    {
         menu();
         printf("扫雷:>");
         scanf("%d",&input);
         switch(input)
         {
            case 1:
               game();
               break;
            case 0:
               printf("退出游戏\n");
               break;
            default:
               printf("输入错误!\n");
               break;
        }
    } while (input);
}
    int main()
{
        test();
        return 0;
}
